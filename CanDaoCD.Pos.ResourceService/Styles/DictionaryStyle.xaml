<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:CanDaoCD.Pos.ResourceService.Controls"
                    xmlns:dxg="http://schemas.devexpress.com/winfx/2008/xaml/grid"
                    xmlns:bindConverter="clr-namespace:CanDaoCD.Pos.ResourceService.BindConverter">
    <bindConverter:PrinterStatusToColorConverter x:Key="PrinterStatus2ColorCvt"/>
    
    <!--文本框-->
    <Style x:Key="VisualTextBox" TargetType="{x:Type TextBox}">
        <Style.Resources>
            <SolidColorBrush x:Key="WatermaskTextBoxWatermaskForeground" Color="#7D7D7D" />
        </Style.Resources>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="KeyboardNavigation.TabNavigation" Value="None"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="MinWidth" Value="120"/>
        <Setter Property="MinHeight" Value="20"/>
        <Setter Property="AllowDrop" Value="True"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="Background" Value="Black"/>
        <Setter Property="BorderBrush" Value="#FF707070"/>
        <Setter Property="FontFamily" Value="微软雅黑"></Setter>
        <Setter Property="FontSize" Value="12"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBox}">
                    <Border x:Name="Border" CornerRadius="5" Padding="2" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="1" >
                        <Grid>
                            <Label x:Name="TextPrompt" Content="{TemplateBinding Tag}" Focusable="False"  Foreground="{DynamicResource WatermaskTextBoxWatermaskForeground}" Visibility="Collapsed" Padding="0" VerticalContentAlignment="Center" Margin="2,0,0,0"/>
                            <ScrollViewer Margin="0" x:Name="PART_ContentHost"/>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsFocused" Value="True">
                            <Setter Property="BorderBrush" TargetName="Border" Value="{DynamicResource TextBoxFocusBorderBrush}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="Border" Property="Background" Value="{DynamicResource TextBoxDisabledBackground}"/>
                            <Setter TargetName="Border" Property="BorderBrush" Value="{DynamicResource TextBoxDisabledBorderBrush}"/>
                            <Setter Property="Foreground" Value="{DynamicResource TextBoxDisabledForeground}"/>
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsFocused" Value="False"/>
                                <Condition Property="IsEnabled" Value="True"/>
                                <Condition Property="Text" Value=""/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Visibility" TargetName="TextPrompt" Value="Visible"/>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True"/>
                                <Condition Property="IsFocused" Value="False"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="BorderBrush" TargetName="Border" Value="{DynamicResource TextBoxMouseOverBorderBrush}"/>
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--图片按钮-->
    <Style x:Key="ImgButton" TargetType="{x:Type local:CtlImageButton}">
        <Setter Property="Width" Value="66"></Setter>
        <Setter Property="Height" Value="66"></Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="local:CtlImageButton">
                    <Image x:Name="img" Source="{TemplateBinding DefaultImage}"></Image>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--点击颜色变化按钮-->
    <Style x:Key="ColBtn" TargetType="{x:Type Button}">
        <Setter Property="Margin" Value="1"/>
        <Setter Property="FontSize" Value="18"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border x:Name="border" CornerRadius="3" Background="#F0F0F0" BorderThickness="1" BorderBrush="Black">
                        <TextBlock VerticalAlignment="Center" HorizontalAlignment="Center" Text="{TemplateBinding Content}" Foreground="{TemplateBinding Foreground}"></TextBlock>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="border" Property="BorderBrush" Value="Blue"></Setter>
                            <Setter TargetName="border" Property="Background" Value="Gainsboro"></Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type local:BulletCheckBox}">
        <Setter Property="Background" Value="#FF4A9E4A"></Setter>
        <Setter Property="Foreground" Value="#DDE8E1"></Setter>
        <Setter Property="CheckedForeground" Value="White"></Setter>
        <Setter Property="CheckedBackground" Value="#FF0CC50C"></Setter>
        <Setter Property="FontSize" Value="20"></Setter>
        <Setter Property="Cursor" Value="Hand"></Setter>
        <Setter Property="Width" Value="150"></Setter>
        <Setter Property="Height" Value="50"></Setter>
        <Setter Property="Margin" Value="1"></Setter>
        <Setter Property="Template">
            <Setter.Value>
                <!--控件模板-->
                <ControlTemplate TargetType="{x:Type local:BulletCheckBox}">
                    <Viewbox Stretch="Uniform"  VerticalAlignment="Center" HorizontalAlignment="Center">
                        <Border x:Name="border" Width="150" Height="50" Background="{TemplateBinding Background}" SnapsToDevicePixels="True"
                                Margin="{TemplateBinding Margin}" CornerRadius="14">
                            <StackPanel Orientation="Horizontal">
                                <!--状态球-->
                                <Border x:Name="state" Width="44" Height="44" Margin="3,2,1,2" CornerRadius="12" SnapsToDevicePixels="True"
                                    Background="{TemplateBinding Foreground}">
                                    <Border.RenderTransform>
                                        <TranslateTransform x:Name="transState" X="0"></TranslateTransform>
                                    </Border.RenderTransform>
                                </Border>
                                <!--文本框-->
                                <TextBlock Width="150" Foreground="{TemplateBinding Foreground}" x:Name="txt" Text="{TemplateBinding Text}" VerticalAlignment="Center" TextAlignment="Center">
                                    <TextBlock.RenderTransform>
                                        <TranslateTransform x:Name="transTxt" X="0"></TranslateTransform>
                                    </TextBlock.RenderTransform>
                                </TextBlock>
                            </StackPanel>
                        </Border>
                    </Viewbox>

                    <!--触发器：设置选中状态符号-->
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter Property="Text" Value="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=CheckedText}" TargetName="txt"/>
                            <Setter Property="Background" Value="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=CheckedForeground}" TargetName="state"/>
                            <Setter Property="Foreground" Value="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=CheckedForeground}" TargetName="txt"/>
                            <Setter Property="Background" Value="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=CheckedBackground}" TargetName="border"/>
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="transState" Storyboard.TargetProperty="X" To="100" Duration="0:0:0.2" />
                                        <DoubleAnimation Storyboard.TargetName="transTxt" Storyboard.TargetProperty="X" To="-84" Duration="0:0:0.2" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="transState" Storyboard.TargetProperty="X" To="0" Duration="0:0:0.2" />
                                        <DoubleAnimation Storyboard.TargetName="transTxt" Storyboard.TargetProperty="X" To="0" Duration="0:0:0.2" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <bindConverter:IndexCountConverter x:Key="IndexCountCvt"/>

    <DataTemplate x:Key="RowIndexDataTemplate">
        <StackPanel VerticalAlignment="Center" HorizontalAlignment="Stretch">
            <TextBlock FontSize="10" Text="{Binding Path=RowHandle.Value, Converter={StaticResource IndexCountCvt}}" TextAlignment="Center" VerticalAlignment="Center" />
        </StackPanel>
    </DataTemplate>

    <!--TableView列样式-->
    <Style TargetType="{x:Type dxg:GridColumn}">
        <Setter Property="FixedWidth" Value="False"/>
        <Setter Property="AllowEditing" Value="False"/>
        <Setter Property="AllowResizing" Value="False"/>
        <Setter Property="FilterPopupMode" Value="CheckedList"/>
        <Setter Property="HorizontalHeaderContentAlignment" Value="Center"/>
    </Style>

    <Style TargetType="{x:Type dxg:TableView}" x:Key="TableViewBaseStyle">
        <Setter Property="AllowBestFit" Value="True"/>
        <Setter Property="AllowColumnFiltering" Value="False"/>
        <Setter Property="AllowDrop" Value="False"/>
        <Setter Property="ShowGroupPanel" Value="False"/>
        <Setter Property="AllowResizing" Value="False"/>
        <Setter Property="AllowCascadeUpdate" Value="True"/>
        <Setter Property="AllowPerPixelScrolling" Value="True"/>
        <Setter Property="AutoWidth" Value="False"/>
        <Setter Property="RowMinHeight" Value="35"/>
        <Setter Property="VerticalScrollbarVisibility" Value="Auto"/>
        <Setter Property="IndicatorWidth" Value="20"/>
        <Setter Property="RowIndicatorContentTemplate" Value="{StaticResource RowIndexDataTemplate}"/>
    </Style>

    <Style TargetType="{x:Type dxg:TableView}" x:Key="TableViewNavRowStyle" BasedOn="{StaticResource TableViewBaseStyle}">
        <Setter Property="NavigationStyle" Value="Row"/>
    </Style>

    <Style TargetType="{x:Type dxg:TableView}" x:Key="TableViewNavCellStyle" BasedOn="{StaticResource TableViewBaseStyle}">
        <Setter Property="NavigationStyle" Value="Cell"/>
    </Style>

    <Style x:Key="TbStyle" TargetType="ToggleButton">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ToggleButton">
                    <Border BorderThickness="1" BorderBrush="White" Background="{TemplateBinding Background}">
                        <TextBlock Foreground="{TemplateBinding Foreground}" Text="{TemplateBinding Content}" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter Property="Foreground" Value="White"/>
                            <Setter Property="Background" Value="DarkGray"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>
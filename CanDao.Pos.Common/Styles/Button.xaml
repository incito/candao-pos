<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="Brushes.xaml"/>
        <ResourceDictionary Source="Images.xaml"/>
    </ResourceDictionary.MergedDictionaries>
    
    <Style x:Key="BtnBaseStyle" TargetType="Button">
        <Setter Property="FontSize" Value="16"/>
        <Setter Property="Margin" Value="2"/>
        <Setter Property="Background" Value="{StaticResource CanDaoPosColorBgWhite}"/>
        <Setter Property="Foreground" Value="{StaticResource CanDaoPosColorFgFont}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border CornerRadius="3"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{StaticResource CanDaoPosColorBgBorder}"
                            BorderThickness="1">
                        <ContentPresenter Content="{TemplateBinding Content}" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True"/>
                                <Condition Property="IsPressed" Value="False"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Background" Value="{StaticResource CanDaoPosColorBgDisable}"/>
                            <Setter Property="Foreground" Value="{StaticResource CanDaoPosColorFg}"/>
                        </MultiTrigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Cursor" Value="Hand"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" Value="{StaticResource CanDaoPosColorSelected}"/>
                            <Setter Property="Foreground" Value="{StaticResource CanDaoPosColorFg}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Foreground" Value="{StaticResource CanDaoPosColorFgDisable}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <Style TargetType="Button" BasedOn="{StaticResource BtnBaseStyle}">
        
    </Style>
    
    <Style x:Key="NoBorderBtnStyle" TargetType="Button">
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Foreground" Value="{StaticResource CanDaoPosColorFg}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <ContentPresenter Content="{TemplateBinding Content}"
                                      HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                      VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    <ControlTemplate.Triggers>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True"/>
                                <Condition Property="IsPressed" Value="False"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Background" Value="{StaticResource CanDaoPosColorBgDisable}"/>
                            <Setter Property="Foreground" Value="{StaticResource CanDaoPosColorFg}"/>
                        </MultiTrigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Cursor" Value="Hand"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" Value="{StaticResource CanDaoPosColorSelected}"/>
                            <Setter Property="Foreground" Value="{StaticResource CanDaoPosColorFg}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <Style x:Key="NumBtnStyle" BasedOn="{StaticResource BtnBaseStyle}" TargetType="Button">
        <Setter Property="Focusable" Value="False"/>
    </Style>

    <Style x:Key="BtnReturnStyle" BasedOn="{StaticResource BtnBaseStyle}" TargetType="Button">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate>
                    <Image Source="../Images/Return.png"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="BtnAddStyle" TargetType="Button">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate>
                    <Border BorderBrush="{StaticResource CanDaoPosColorBgBorder}" BorderThickness="1">
                        <Image Source="{StaticResource CanDaoPosImageAdd}" UseLayoutRounding="True"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="BtnReduceStyle" TargetType="Button">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate>
                    <Border BorderBrush="{StaticResource CanDaoPosColorBgBorder}" BorderThickness="1">
                        <Image Source="{StaticResource CanDaoPosImageReduce}" UseLayoutRounding="True"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="BtnDownStyle" BasedOn="{StaticResource BtnBaseStyle}" TargetType="Button">
        <Setter Property="Width" Value="32"/>
        <Setter Property="Height" Value="31"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate>
                    <Border BorderBrush="{StaticResource CanDaoPosColorBgBorder}" BorderThickness="1">
                        <Image Source="{StaticResource CanDaoPosImageDown}"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="BtnUpStyle" BasedOn="{StaticResource BtnBaseStyle}" TargetType="Button">
        <Setter Property="Width" Value="32"/>
        <Setter Property="Height" Value="31"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate>
                    <Border BorderBrush="{StaticResource CanDaoPosColorBgBorder}" BorderThickness="1">
                        <Image Source="{StaticResource CanDaoPosImageUp}"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="BtnLeftStyle" BasedOn="{StaticResource BtnBaseStyle}" TargetType="Button">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate>
                    <Border BorderBrush="{StaticResource CanDaoPosColorBgBorder}" BorderThickness="0">
                        <Image Source="{StaticResource CanDaoPosImageLeft}" UseLayoutRounding="True"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value="0.3"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <Style x:Key="BtnLeftNoBorderStyle" BasedOn="{StaticResource BtnBaseStyle}" TargetType="Button">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate>
                    <Image Source="{StaticResource CanDaoPosImageLeft}" UseLayoutRounding="True"/>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value="0.3"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="BtnRightStyle" BasedOn="{StaticResource BtnBaseStyle}" TargetType="Button">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate>
                    <Border BorderBrush="{StaticResource CanDaoPosColorBgBorder}" BorderThickness="0">
                        <Image Source="{StaticResource CanDaoPosImageRight}" UseLayoutRounding="True"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value="0.3"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="BtnClearStyle" BasedOn="{StaticResource BtnBaseStyle}" TargetType="Button">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate>
                    <Image Source="../Images/Clear32.png"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="Button" x:Key="AddBtnStyle">
        <Setter Property="Width" Value="35"/>
        <Setter Property="Height" Value="35"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate>
                    <Image Source="{StaticResource CanDaoPosImageAdd1}" UseLayoutRounding="True"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="Button" x:Key="ReduceBtnStyle">
        <Setter Property="Width" Value="35"/>
        <Setter Property="Height" Value="35"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate>
                    <Image Source="{StaticResource CanDaoPosImageReduce}" UseLayoutRounding="True"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="Button" x:Key="SelectNumBtnStyle">
        <Setter Property="Width" Value="35"/>
        <Setter Property="Height" Value="35"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate>
                    <Image Source="{StaticResource CanDaoPosImageSelect}" UseLayoutRounding="True"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <Style TargetType="Button" x:Key="ChangeShiftBtnStyle">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Grid>
                        <Image x:Name="ImgN"  Visibility="Visible" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Source="{StaticResource CanDaoPosImageChangeShiftNor}"/>
                        <Image x:Name="ImgP" Visibility="Collapsed"  HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Source="{StaticResource CanDaoPosImageChangeShiftPress}"/>
                        <Image x:Name="ImgD" Visibility="Collapsed"  HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Source="{StaticResource CanDaoPosImageChangeShiftDis}"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="ImgN" Property="Visibility" Value="Collapsed"/>
                            <Setter TargetName="ImgP" Property="Visibility" Value="Visible"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="ImgN" Property="Visibility" Value="Collapsed"/>
                            <Setter TargetName="ImgD" Property="Visibility" Value="Visible"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <Style TargetType="Button" x:Key="EndWorkBtnStyle">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Grid>
                        <Image x:Name="ImgN"  Visibility="Visible" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Source="{StaticResource CanDaoPosImageEndWorkNor}"/>
                        <Image x:Name="ImgP" Visibility="Collapsed"  HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Source="{StaticResource CanDaoPosImageEndWorkPress}"/>
                        <Image x:Name="ImgD" Visibility="Collapsed"  HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Source="{StaticResource CanDaoPosImageEndWorkDis}"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="ImgN" Property="Visibility" Value="Collapsed"/>
                            <Setter TargetName="ImgP" Property="Visibility" Value="Visible"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="ImgN" Property="Visibility" Value="Collapsed"/>
                            <Setter TargetName="ImgD" Property="Visibility" Value="Visible"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>